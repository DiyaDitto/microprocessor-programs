data segment
        msg1 db 0ah,0dh, "Enter first number : $"
        msg2 db 0ah,0dh, "Enter second number : $"
        msg3 db 0ah,0dh, "Result is : $"
        n1 db 07h dup(?)
        n2 db 07h dup(?)
data ends

code segment
        assume cs:code,ds:data
        start: mov ax,data
               mov ds,ax
      
               ;Getting offset of arrays         
               mov si,offset n1
               mov di,offset n2

               ;Printing "Enter first number"
               lea dx,msg1
               mov ah,09h
               int 21h

               ;Setting Count to 4
               mov cl,04h

               ;Getting First Number
         first:mov ah,01h
               int 21h
               sub al,30h
               mov [si],al
               inc si
               dec cl
               jnz first

               ;Printing "Enter second number"
               lea dx,msg2
               mov ah,09h
               int 21h

               ;Setting count to 4
               mov cl,04h

               ;Getting second Number
        second:mov ah,01h
               int 21h
               sub al,30h
               mov [di],al
               inc di
               dec cl
               jnz second

               ;Clearing borrow
               clc

               ;Setting count to 4
               mov cl,04h

               ;Performing Subtraction
      subtraction:dec di
                   dec si
                   mov al,[si]
                   mov bl,[di]

                   ; Subtracting with borrow
                   sbb al,bl
                   mov ah,00h
                   ; Check if we need to borrow
                   cmp al,0
                   jl borrow

                   ; Store result
                   mov [di],al
                   jmp no_borrow

      borrow:
                   ; Handle borrowing
                   ; If we borrowed, we need to adjust the result
                   add al,10h ; Adjust for borrow
                   dec byte ptr [di-1] ; Decrement the next higher digit
                   mov [di],al

      no_borrow:
                   dec cl
                   jnz subtraction

               ;Printing "Result is"
               lea dx,msg3
               mov ah,09h
               int 21h

               ;Printing Result
               mov bh,00h
               mov dl,30h
               ; Note: We don't need to handle carry here, but we will need to handle negative results
               cmp [di], 0
               jge print_result

               ; If the result is negative, print a negative sign
               mov dl, '-'
               mov ah, 02h
               int 21h
               jmp print

      print_result:
               ; Setting Count to 4
               mov cl,04h

               ; Printing array content
         print:mov dl,[di]
               add dl,30h

               mov ah,02h
               int 21h

               inc di
               dec cl
               jnz print

               mov ah,4ch
               int 21h
code ends
end start
